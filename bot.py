import logging
import asyncio
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from telegram.constants import ParseMode
import os
from datetime import datetime

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env (–ª–æ–∫–∞–ª—å–Ω–æ) –∞–±–æ –∑ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–ø—Ä–æ–¥–∞–∫—à–Ω)
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass  # –í –ø—Ä–æ–¥–∞–∫—à–Ω dotenv –º–æ–∂–µ –Ω–µ –±—É—Ç–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ

logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è - —á–∏—Ç–∞—î–º–æ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID")
PORT = int(os.getenv("PORT", 8443))  # –î–ª—è –¥–µ—è–∫–∏—Ö —Ö–æ—Å—Ç–∏–Ω–≥—ñ–≤

class CampSafetyBot:
    def __init__(self):
        self.user_states = {}  # –î–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≥–æ–ª–æ–≤–Ω–∏–º –º–µ–Ω—é"""
        user = update.effective_user
        
        welcome_text = f"""
üèïÔ∏è –ü—Ä–∏–≤—ñ—Ç, {user.first_name}! 

–Ø –±–æ—Ç "–ë–µ–∑–ø–µ—á–Ω–∏–π —Ç–∞–±—ñ—Ä" - —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Ç–∞ –¥—Ä—É–∂–Ω—å–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.

üõ°Ô∏è –¢—É—Ç —Ç–∏ –º–æ–∂–µ—à:
‚Ä¢ –î—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ –±—É–ª—ñ–Ω–≥ —Ç–∞ —è–∫ –∑ –Ω–∏–º –±–æ—Ä–æ—Ç–∏—Å—è
‚Ä¢ –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Ç–∞ –ø–æ—Ä–∞–¥–∏
‚Ä¢ –ê–Ω–æ–Ω—ñ–º–Ω–æ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º—É
‚Ä¢ –ó–Ω–∞–π—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É –≤ —Å–∫–ª–∞–¥–Ω—ñ–π —Å–∏—Ç—É–∞—Ü—ñ—ó

–û–±–∏—Ä–∞–π, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üëá
"""
        
        keyboard = [
            [InlineKeyboardButton("üìö –©–æ —Ç–∞–∫–µ –±—É–ª—ñ–Ω–≥?", callback_data="what_is_bullying")],
            [InlineKeyboardButton("üõ°Ô∏è –©–æ —Ä–æ–±–∏—Ç–∏ —è–∫—â–æ —Ü—å–∫—É—é—Ç—å?", callback_data="what_to_do")],
            [InlineKeyboardButton("üëÄ –Ø–∫—â–æ —Ç–∏ —Å–≤—ñ–¥–æ–∫", callback_data="witness")],
            [InlineKeyboardButton("üÜò SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data="sos_help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            welcome_text, 
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def button_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "what_is_bullying":
            await self.explain_bullying(query)
        elif query.data == "what_to_do":
            await self.what_to_do(query)
        elif query.data == "witness":
            await self.witness_advice(query)
        elif query.data == "sos_help":
            await self.sos_help_menu(query)
        elif query.data == "urgent_help":
            await self.urgent_help(query, context)
        elif query.data == "need_help":
            await self.need_help(query)
        elif query.data == "want_to_share":
            await self.want_to_share(query)
        elif query.data == "back_to_menu":
            await self.back_to_menu(query)
        elif query.data == "back_to_sos":
            await self.sos_help_menu(query)
        elif query.data == "cant_write_now":
            await self.cant_write_now(query, context)

    async def explain_bullying(self, query):
        """–ü–æ—è—Å–Ω–µ–Ω–Ω—è —â–æ —Ç–∞–∫–µ –±—É–ª—ñ–Ω–≥"""
        text = """
üìñ <b>–©–æ —Ç–∞–∫–µ –±—É–ª—ñ–Ω–≥?</b>

<b>–ë—É–ª—ñ–Ω–≥</b> - —Ü–µ –∫–æ–ª–∏ –æ–¥–Ω—É –ª—é–¥–∏–Ω—É <b>—Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–æ</b> (–Ω–µ –æ–¥–∏–Ω —Ä–∞–∑, –∞ –±–∞–≥–∞—Ç–æ —Ä–∞–∑—ñ–≤) <b>–æ–±—Ä–∞–∂–∞—é—Ç—å, –ø—Ä–∏–Ω–∏–∂—É—é—Ç—å, –±'—é—Ç—å –∞–±–æ –≤–∏–∫–ª—é—á–∞—é—Ç—å –∑ –∫–æ–ª–µ–∫—Ç–∏–≤—É</b>. 

–¶–µ –Ω–µ –∂–∞—Ä—Ç —ñ –Ω–µ —Å–≤–∞—Ä–∫–∞ - —Ü–µ <b>–Ω–∞–≤–º–∏—Å–Ω–∞ –∂–æ—Ä—Å—Ç–æ–∫—ñ—Å—Ç—å</b>.

üîç <b>–í–∏–¥–∏ –±—É–ª—ñ–Ω–≥—É:</b>

<b>1. –§—ñ–∑–∏—á–Ω–∏–π –±—É–ª—ñ–Ω–≥</b>
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–æ –±'—é—Ç—å, —à—Ç–æ–≤—Ö–∞—é—Ç—å
‚Ä¢ –ö–∏–¥–∞—é—Ç—å —Ä–µ—á—ñ, –ª–∞–º–∞—é—Ç—å –æ—Å–æ–±–∏—Å—Ç—ñ —Ä–µ—á—ñ

<b>2. –ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∏–π –±—É–ª—ñ–Ω–≥</b>
‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–æ –Ω–∞—Å–º—ñ—Ö–∞—é—Ç—å—Å—è, –æ–±–∑–∏–≤–∞—é—Ç—å
‚Ä¢ –ü—Ä–∏–Ω–∏–∂—É—é—Ç—å, –ª—è–∫–∞—é—Ç—å, —Ä–æ–∑–ø—É—Å–∫–∞—é—Ç—å —á—É—Ç–∫–∏

<b>3. –°–æ—Ü—ñ–∞–ª—å–Ω–∏–π –±—É–ª—ñ–Ω–≥</b>
‚Ä¢ –ù–µ –ø—É—Å–∫–∞—é—Ç—å –≤ –≥—Ä—É, –Ω–µ –¥–∞—é—Ç—å —Å—ñ—Å—Ç–∏ –∑–∞ —Å—Ç—ñ–ª
‚Ä¢ –°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ —ñ–≥–Ω–æ—Ä—É—é—Ç—å –∞–±–æ —Ä–æ–±–ª—è—Ç—å "—ñ–∑–≥–æ—î–º"

<b>4. –ö—ñ–±–µ—Ä–±—É–ª—ñ–Ω–≥</b>
‚Ä¢ –ü–∏—à—É—Ç—å –æ–±—Ä–∞–∑–∏ –≤ —á–∞—Ç–∞—Ö
‚Ä¢ –ü—É–±–ª—ñ–∫—É—é—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –¥–æ–∑–≤–æ–ª—É
‚Ä¢ –°—Ç–≤–æ—Ä—é—é—Ç—å –æ–±—Ä–∞–∑–ª–∏–≤—ñ –º–µ–º–∏

üö´ <b>–¶–µ –ù–ï –±—É–ª—ñ–Ω–≥, —è–∫—â–æ:</b>
‚Ä¢ –î—ñ—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–≤–∞—Ä–∏–ª–∏—Å—è - —Ü–µ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç
‚Ä¢ –•—Ç–æ—Å—å –≤–∏–ø–∞–¥–∫–æ–≤–æ —â–æ—Å—å —Å–∫–∞–∑–∞–≤ - —Ü–µ –Ω–µ –Ω–∞–≤–º–∏—Å–Ω–µ

–ê–ª–µ —è–∫—â–æ –æ–±—Ä–∞–∑–∏ –ø–æ–≤—Ç–æ—Ä—é—é—Ç—å—Å—è —ñ —Ç–æ–±—ñ –ø–æ—Å—Ç—ñ–π–Ω–æ –±–æ–ª—è—á–µ - —Ü–µ –±—É–ª—ñ–Ω–≥!
"""
        
        keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def what_to_do(self, query):
        """–ü–æ—Ä–∞–¥–∏ —â–æ —Ä–æ–±–∏—Ç–∏ —è–∫—â–æ —Ü—å–∫—É—é—Ç—å"""
        text = """
üõ°Ô∏è <b>–©–æ —Ä–æ–±–∏—Ç–∏, —è–∫—â–æ —Ç–µ–±–µ —Ü—å–∫—É—é—Ç—å?</b>

–Ø–∫—â–æ —Ö—Ç–æ—Å—å —Ç–µ–±–µ <b>–ø–æ—Å—Ç—ñ–π–Ω–æ –æ–±—Ä–∞–∂–∞—î, –±'—î, –ª—è–∫–∞—î –∞–±–æ –ø—Ä–∏–Ω–∏–∂—É—î</b> - —Ü–µ –Ω–µ —Ç–≤–æ—è –ø—Ä–æ–≤–∏–Ω–∞. –Ü —Ç–∏ <b>–Ω–µ –æ–¥–∏–Ω/–æ–¥–Ω–∞</b>.

‚úÖ <b>–ö—Ä–æ–∫–∏, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à –∑—Ä–æ–±–∏—Ç–∏:</b>

<b>1. –ù–µ –º–æ–≤—á–∏</b>
üî∏ –†–æ–∑–∫–∞–∂–∏ –¥–æ—Ä–æ—Å–ª–æ–º—É, —è–∫–æ–º—É –¥–æ–≤—ñ—Ä—è—î—à:
‚Ä¢ –í–∏—Ö–æ–≤–∞—Ç–µ–ª—é/–≤–∏—Ö–æ–≤–∞—Ç–µ–ª—å—Ü—ñ
‚Ä¢ –ü—Å–∏—Ö–æ–ª–æ–≥—É —Ç–∞–±–æ—Ä—É
‚Ä¢ –õ—ñ–∫–∞—Ä—é —á–∏ –º–µ–¥—Å–µ—Å—Ç—Ä—ñ
‚Ä¢ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞–±–æ—Ä—É

–¶–µ –Ω–µ "—è–±–µ–¥–Ω–∏—á–∞–Ω–Ω—è", –∞ <b>–∑–∞—Ö–∏—Å—Ç —Å–µ–±–µ</b>.

<b>2. –ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∞–≥—Ä–µ—Å—ñ—î—é</b>
üî∏ –ù–µ –±–∏–π, –Ω–µ –∫—Ä–∏—á–∏, –Ω–µ –º—Å—Ç–∏—Å—è
üî∏ –ö—Ä–∞—â–µ —Å–∫–∞–∑–∞—Ç–∏ —Å–ø–æ–∫—ñ–π–Ω–æ: "–ó—É–ø–∏–Ω–∏—Å—å. –ú–µ–Ω—ñ —Ü–µ –Ω–µ–ø—Ä–∏—î–º–Ω–æ"

<b>3. –®—É–∫–∞–π –ø—ñ–¥—Ç—Ä–∏–º–∫—É</b>
üî∏ –ü–æ–≥–æ–≤–æ—Ä–∏ –∑ –¥—Ä—É–≥–æ–º/–ø–æ–¥—Ä—É–≥–æ—é
üî∏ –ü–æ–ø—Ä–æ—Å–∏, —â–æ–± —Ö—Ç–æ—Å—å –±—É–≤ –ø–æ—Ä—É—á

<b>4. –ó–≤–µ—Ä–Ω–∏—Å—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∞–Ω–æ–Ω—ñ–º–Ω–æ</b>
üî∏ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ä–æ–∑–¥—ñ–ª "SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ"
üî∏ –ú–∏ –ø–æ–±–∞—á–∏–º–æ —Ç–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –π –¥–æ–ø–æ–º–æ–∂–µ–º–æ

<b>5. –ü–∞–º'—è—Ç–∞–π: —Ç–∏ –Ω–µ –≤–∏–Ω–µ–Ω/–≤–∏–Ω–Ω–∞</b>
üî∏ –ö–æ–∂–µ–Ω –º–∞—î –ø—Ä–∞–≤–æ –Ω–∞ –ø–æ–≤–∞–≥—É —Ç–∞ –±–µ–∑–ø–µ–∫—É!
"""
        
        keyboard = [
            [InlineKeyboardButton("üÜò SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data="sos_help")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def witness_advice(self, query):
        """–ü–æ—Ä–∞–¥–∏ –¥–ª—è —Å–≤—ñ–¥–∫—ñ–≤ –±—É–ª—ñ–Ω–≥—É"""
        text = """
üëÄ <b>–©–æ —Ä–æ–±–∏—Ç–∏, —è–∫—â–æ —Ç–∏ —Å–≤—ñ–¥–æ–∫ –±—É–ª—ñ–Ω–≥—É?</b>

–Ø–∫—â–æ —Ç–∏ –±–∞—á–∏—à, —è–∫ <b>–∫–æ–≥–æ—Å—å –æ–±—Ä–∞–∂–∞—é—Ç—å, –ø—Ä–∏–Ω–∏–∂—É—é—Ç—å, –≤–∏–∫–ª—é—á–∞—é—Ç—å –∑ –≥—Ä–∏</b> - –Ω–µ –º–æ–≤—á–∏. –¢–≤–æ—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –º–æ–∂–µ –∑–º—ñ–Ω–∏—Ç–∏ –≤—Å–µ!

üí¨ <b>–ß–æ–º—É –≤–∞–∂–ª–∏–≤–æ –Ω–µ –±—É—Ç–∏ –æ—Å—Ç–æ—Ä–æ–Ω—å:</b>
üîπ –ë—É–ª—ñ–Ω–≥ –Ω–µ –ø—Ä–∏–ø–∏–Ω—è—î—Ç—å—Å—è —Å–∞–º –ø–æ —Å–æ–±—ñ
üîπ –¢–æ–π, –∫–æ–≥–æ —Ü—å–∫—É—é—Ç—å, —á–∞—Å—Ç–æ –±–æ—ó—Ç—å—Å—è —â–æ—Å—å —Å–∫–∞–∑–∞—Ç–∏
üîπ –ú–æ–≤—á–∞–Ω–Ω—è - —Ü–µ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –∫—Ä–∏–≤–¥–Ω–∏–∫–∞
üîπ –Ø–∫—â–æ —Ö—Ç–æ—Å—å —Å—Ç–∞–Ω–µ –Ω–∞ –∑–∞—Ö–∏—Å—Ç - —ñ–Ω—à—ñ —Ç–µ–∂ –∑–º–æ–∂—É—Ç—å

‚úÖ <b>–Ø–∫ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –±–µ–∑–ø–µ—á–Ω–æ:</b>

<b>1. –ù–µ —Å–º—ñ–π—Å—è —ñ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É–π –∫—Ä–∏–≤–¥–Ω–∏–∫—ñ–≤</b>
–ù–∞–≤—ñ—Ç—å –ø—Ä–æ—Å—Ç–æ —Å–º—ñ—Ö –ø—ñ–¥–±–∞–¥—å–æ—Ä—é—î —Ç–æ–≥–æ, —Ö—Ç–æ –∑–Ω—É—â–∞—î—Ç—å—Å—è.

<b>2. –ü—ñ–¥—ñ–π–¥–∏ –¥–æ —Ç–æ–≥–æ, –∫–æ–≥–æ —Ü—å–∫—É—é—Ç—å</b>
–°–∫–∞–∂–∏: "–Ø –±–∞—á–∏–≤, —â–æ —Å—Ç–∞–ª–æ—Å—è. –¶–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –¢–∏ –Ω–µ –æ–¥–∏–Ω/–æ–¥–Ω–∞."

<b>3. –†–æ–∑–∫–∞–∂–∏ –¥–æ—Ä–æ—Å–ª–æ–º—É</b>
–ü–æ–≤—ñ–¥–æ–º –≤–∏—Ö–æ–≤–∞—Ç–µ–ª—è, –ø—Å–∏—Ö–æ–ª–æ–≥–∞ —á–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—é.
–¢–∏ –Ω–µ "—è–±–µ–¥–∞" - —Ç–∏ –¥–æ–ø–æ–º–∞–≥–∞—î—à –∑—É–ø–∏–Ω–∏—Ç–∏ –∂–æ—Ä—Å—Ç–æ–∫—ñ—Å—Ç—å.

<b>4. –ü–æ–≤—ñ–¥–æ–º –∞–Ω–æ–Ω—ñ–º–Ω–æ</b>
"–Ø –±–∞—á–∏–≤ –±—É–ª—ñ–Ω–≥ —É –≥—Ä—É–ø—ñ ‚Ññ__. –û—Å—å —â–æ —Å—Ç–∞–ª–æ—Å—è..."

üíö <b>–¢–≤–æ—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ - —Ü–µ —Å–∏–ª–∞!</b>
"""
        
        keyboard = [
            [InlineKeyboardButton("üÜò –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data="sos_help")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def sos_help_menu(self, query):
        """–ú–µ–Ω—é SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ"""
        text = """
üÜò <b>SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ</b>

üëã –¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –±–µ–∑–ø–µ—á–Ω–æ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –ø—Ä–æ —Å–∏—Ç—É–∞—Ü—ñ—é, —è–∫–∞ —Ç–µ–±–µ —Ç—É—Ä–±—É—î.
–ú–∏ –Ω–µ –ø–∏—Ç–∞—î–º–æ, —è–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏. –¶–µ <b>–ø–æ–≤–Ω—ñ—Å—Ç—é –∞–Ω–æ–Ω—ñ–º–Ω–æ</b>.

–û—Ü–∏–Ω–∏ —Ä—ñ–≤–µ–Ω—å —Å–∏—Ç—É–∞—Ü—ñ—ó, —â–æ–± –º–∏ –º–æ–≥–ª–∏ —à–≤–∏–¥—à–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏:

üî¥ <b>–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞!</b>
–Ø–∫—â–æ –∑–∞—Ä–∞–∑ —â–æ—Å—å –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–±–æ —Ç–∏ –≤ –Ω–µ–±–µ–∑–ø–µ—Ü—ñ

üü° <b>–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞</b>  
–©–æ—Å—å —Å—Ç–∞–ª–æ—Å—è —ñ –ø–æ—Ç—Ä—ñ–±–Ω–µ –≤—Ç—Ä—É—á–∞–Ω–Ω—è –¥–æ—Ä–æ—Å–ª–∏—Ö

üü¢ <b>–•–æ—á—É –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è</b>
–•–æ—á—É —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ –ø—Ä–æ —Å–∏—Ç—É–∞—Ü—ñ—é –∞–±–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ä–∞–¥—É
"""
        
        keyboard = [
            [InlineKeyboardButton("üî¥ –¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞!", callback_data="urgent_help")],
            [InlineKeyboardButton("üü° –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞", callback_data="need_help")],
            [InlineKeyboardButton("üü¢ –•–æ—á—É –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è", callback_data="want_to_share")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def urgent_help(self, query, context):
        """–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞"""
        user_id = query.from_user.id
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –µ–∫—Å—Ç—Ä–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        urgent_text = f"""
üî¥ <b>üö® –¢–ï–†–ú–Ü–ù–û–í–ê –î–û–ü–û–ú–û–ì–ê! üö®</b>

üìÖ –ß–∞—Å: {datetime.now().strftime('%d.%m.%Y %H:%M')}
üë§ –í—ñ–¥: –ê–Ω–æ–Ω—ñ–º–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
üÜò –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ù–ï–ì–ê–ô–ù–ê –¥–æ–ø–æ–º–æ–≥–∞!

‚ö†Ô∏è –¢–ï–†–ú–Ü–ù–û–í–û –ó–í–ï–†–ù–Ü–¢–¨ –£–í–ê–ì–£!
–î–∏—Ç–∏–Ω–∞ –æ–±—Ä–∞–ª–∞ "–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞" - —Å–∏—Ç—É–∞—Ü—ñ—è –∫—Ä–∏—Ç–∏—á–Ω–∞!
"""
        
        try:
            await context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=urgent_text,
                parse_mode=ParseMode.HTML
            )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó–æ SOS: {e}")
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å—É
        self.user_states[user_id] = "waiting_for_urgent_details"
        
        text = """
üî¥ <b>–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞</b>

üö® –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ç–≤—ñ–π —Å–∏–≥–Ω–∞–ª –ø—Ä–æ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å!
–î–æ—Ä–æ—Å–ª—ñ –≤–∂–µ —Å–ø–æ–≤—ñ—â–µ–Ω—ñ —ñ –ø—Ä–∏–¥—ñ–ª—è—Ç—å —Ü—å–æ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É —É–≤–∞–≥—É.

–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏ —â–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∑–∞—Ä–∞–∑ –∞–±–æ —â–æ —Å—Ç–∞–ª–æ—Å—è:
‚Ä¢ –î–µ —Ü–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?
‚Ä¢ –•—Ç–æ –∑–∞–¥—ñ—è–Ω–∏–π?
‚Ä¢ –©–æ —Å–∞–º–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?

–Ø–∫—â–æ –Ω–µ –º–æ–∂–µ—à –ø–∏—Å–∞—Ç–∏ - –Ω–µ —Ö–≤–∏–ª—é–π—Å—è, –¥–æ—Ä–æ—Å–ª—ñ –≤–∂–µ —à—É–∫–∞—é—Ç—å —Å–ø–æ—Å—ñ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏.

‚úçÔ∏è <b>–ù–∞–ø–∏—à–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º —â–æ —Å—Ç–∞–ª–æ—Å—è.</b>
"""
        
        keyboard = [
            [InlineKeyboardButton("üö´ –ù–µ –º–æ–∂—É –ø–∏—Å–∞—Ç–∏ –∑–∞—Ä–∞–∑", callback_data="cant_write_now")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_sos")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def need_help(self, query):
        """–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞"""
        text = """
üü° <b>–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞</b>

üëã –ú–∏ –≥–æ—Ç–æ–≤—ñ —Ç–µ–±–µ –≤–∏—Å–ª—É—Ö–∞—Ç–∏ —ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏.
–†–æ–∑–∫–∞–∂–∏ –¥–µ—Ç–∞–ª—å–Ω–æ –ø—Ä–æ —Å–∏—Ç—É–∞—Ü—ñ—é:

üìù <b>–ù–∞–ø–∏—à–∏ –ø—Ä–æ:</b>
‚Ä¢ –©–æ —Å—Ç–∞–ª–æ—Å—è?
‚Ä¢ –ö–æ–ª–∏ —Ü–µ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è?
‚Ä¢ –•—Ç–æ –∑–∞–¥—ñ—è–Ω–∏–π?
‚Ä¢ –£ —è–∫—ñ–π –≥—Ä—É–ø—ñ?
‚Ä¢ –Ø–∫ –¥–æ–≤–≥–æ —Ü–µ —Ç—Ä–∏–≤–∞—î?
‚Ä¢ –ë—É–¥—å-—è–∫—ñ —ñ–Ω—à—ñ –≤–∞–∂–ª–∏–≤—ñ –¥–µ—Ç–∞–ª—ñ

–ú–æ–∂–µ—à —Ç–∞–∫–æ–∂ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ —á–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç, —è–∫—â–æ —Ü–µ –¥–æ–ø–æ–º–æ–∂–µ.

‚úçÔ∏è <b>–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º —Å–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—é.</b>
"""
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_id = query.from_user.id
        self.user_states[user_id] = "waiting_for_help_report"
        
        keyboard = [
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_sos")],
            [InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="back_to_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def want_to_share(self, query):
        """–•–æ—á—É –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è"""
        text = """
üü¢ <b>–•–æ—á—É –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è</b>

üíö –î—è–∫—É—î–º–æ, —â–æ –¥–æ–≤—ñ—Ä—è—î—à –Ω–∞–º!
–î—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–Ω—è–º–∏ - —Ü–µ –≤–∞–∂–ª–∏–≤–æ.

üìù <b>–†–æ–∑–∫–∞–∂–∏ –ø—Ä–æ:</b>
‚Ä¢ –©–æ —Ç–µ–±–µ —Ç—É—Ä–±—É—î?
‚Ä¢ –ú–æ–∂–ª–∏–≤–æ —â–æ—Å—å –±–∞—á–∏–≤/–±–∞—á–∏–ª–∞?
‚Ä¢ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–æ—Ä–∞–¥–∞?
‚Ä¢ –•–æ—á–µ—à –ø—Ä–æ—Å—Ç–æ –≤–∏—Å–ª–æ–≤–∏—Ç–∏—Å—è?

–ú–∏ –ø—Ä–æ—á–∏—Ç–∞—î–º–æ —ñ, –º–æ–∂–ª–∏–≤–æ, –∑–º–æ–∂–µ–º–æ –¥–∞—Ç–∏ –ø–æ—Ä–∞–¥—É –∞–±–æ –ø—Ä–æ—Å—Ç–æ –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏.

‚úçÔ∏è <b>–ù–∞–ø–∏—à–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º —â–æ —Ö–æ—á–µ—à —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏.</b>
"""
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_id = query.from_user.id
        self.user_states[user_id] = "waiting_for_sharing"
        
        keyboard = [
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_sos")],
            [InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="back_to_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def handle_urgent_details(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –¥–µ—Ç–∞–ª–µ–π —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó—ñ –¥–æ–ø–æ–º–æ–≥–∏"""
        user_id = update.effective_user.id
        
        if user_id not in self.user_states or self.user_states[user_id] != "waiting_for_urgent_details":
            return
        
        del self.user_states[user_id]
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–µ—Ç–∞–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        details_text = f"""
üî¥ <b>üö® –î–ï–¢–ê–õ–Ü –¢–ï–†–ú–Ü–ù–û–í–û–á–Ü –°–ò–¢–£–ê–¶–Ü–á üö®</b>

üìÖ –ß–∞—Å: {datetime.now().strftime('%d.%m.%Y %H:%M')}
üìù –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:

{update.message.text}

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–ê –°–ò–¢–£–ê–¶–Ü–Ø - –ù–ï–ì–ê–ô–ù–ê –†–ï–ê–ö–¶–Ü–Ø –ü–û–¢–†–Ü–ë–ù–ê!
"""
        
        try:
            await context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=details_text,
                parse_mode=ParseMode.HTML
            )
            
            # –Ø–∫—â–æ —î —Ñ–æ—Ç–æ
            if update.message.photo:
                await context.bot.send_photo(
                    chat_id=ADMIN_CHAT_ID,
                    photo=update.message.photo[-1].file_id,
                    caption="üìé –§–æ—Ç–æ –¥–æ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó"
                )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–µ—Ç–∞–ª–µ–π —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó—ñ –¥–æ–ø–æ–º–æ–≥–∏: {e}")
        
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        confirmation_text = """
‚úÖ <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø–µ—Ä–µ–¥–∞–Ω–æ!</b>

üö® –î–æ—Ä–æ—Å–ª—ñ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤—Å—ñ –¥–µ—Ç–∞–ª—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó.
–î–æ–ø–æ–º–æ–≥–∞ –≤–∂–µ –π–¥–µ –¥–æ —Ç–µ–±–µ!

–¢—Ä–∏–º–∞–π—Å—è —ñ –ø–∞–º'—è—Ç–∞–π - —Ç–∏ –Ω–µ –æ–¥–∏–Ω/–æ–¥–Ω–∞.
üíö –¢–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑—Ä–æ–±–∏–≤/–∑—Ä–æ–±–∏–ª–∞, —â–æ –∑–≤–µ—Ä–Ω—É–≤—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é!
"""
        
        keyboard = [[InlineKeyboardButton("üîô –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            confirmation_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def handle_help_report(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é"""
        user_id = update.effective_user.id
        
        if user_id not in self.user_states or self.user_states[user_id] != "waiting_for_help_report":
            return
        
        # –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω
        del self.user_states[user_id]
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
        report_text = f"""
üü° <b>–ó–í–ï–†–ù–ï–ù–ù–Ø –ó–ê –î–û–ü–û–ú–û–ì–û–Æ</b>

üìÖ –ß–∞—Å: {datetime.now().strftime('%d.%m.%Y %H:%M')}
üë§ –í—ñ–¥: –ê–Ω–æ–Ω—ñ–º–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
üìù –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:

{update.message.text}

---
‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω–∞ —É–≤–∞–≥–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó!
"""
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∞–¥–º—ñ–Ω-—á–∞—Ç
        try:
            await context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=report_text,
                parse_mode=ParseMode.HTML
            )
            
            # –Ø–∫—â–æ —î —Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç–∏
            if update.message.photo:
                await context.bot.send_photo(
                    chat_id=ADMIN_CHAT_ID,
                    photo=update.message.photo[-1].file_id,
                    caption="üìé –§–æ—Ç–æ –¥–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é"
                )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è: {e}")
        
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        confirmation_text = """
‚úÖ <b>–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!</b>

–ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ç–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –¢–µ–±–µ –ø–æ—á—É–ª–∏.

–î–æ—Ä–æ—Å–ª—ñ, —è–∫–∏–º –º–æ–∂–Ω–∞ –¥–æ–≤—ñ—Ä—è—Ç–∏, –¥–æ–ø–æ–º–æ–∂—É—Ç—å —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è –∑ —Å–∏—Ç—É–∞—Ü—ñ—î—é.

üíö –¢–∏ –∑—Ä–æ–±–∏–≤/–∑—Ä–æ–±–∏–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —â–æ –Ω–µ –º–æ–≤—á–∏—à!
"""
        
        keyboard = [[InlineKeyboardButton("üîô –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            confirmation_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def handle_sharing(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –¥—ñ–ª–µ–Ω–Ω—è –¥—É–º–∫–∞–º–∏"""
        user_id = update.effective_user.id
        
        if user_id not in self.user_states or self.user_states[user_id] != "waiting_for_sharing":
            return
        
        # –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω
        del self.user_states[user_id]
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤
        sharing_text = f"""
üü¢ <b>–î–Ü–õ–ï–ù–ù–Ø –î–£–ú–ö–ê–ú–ò</b>

üìÖ –ß–∞—Å: {datetime.now().strftime('%d.%m.%Y %H:%M')}
üë§ –í—ñ–¥: –ê–Ω–æ–Ω—ñ–º–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
üí≠ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:

{update.message.text}

---
üíö –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
"""
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∞–¥–º—ñ–Ω-—á–∞—Ç
        try:
            await context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=sharing_text,
                parse_mode=ParseMode.HTML
            )
            
            # –Ø–∫—â–æ —î —Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç–∏
            if update.message.photo:
                await context.bot.send_photo(
                    chat_id=ADMIN_CHAT_ID,
                    photo=update.message.photo[-1].file_id,
                    caption="üìé –§–æ—Ç–æ –¥–æ –¥—ñ–ª–µ–Ω–Ω—è –¥—É–º–∫–∞–º–∏"
                )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥—ñ–ª–µ–Ω–Ω—è –¥—É–º–∫–∞–º–∏: {e}")
        
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        confirmation_text = """
üíö <b>–î—è–∫—É—î–º–æ, —â–æ –ø–æ–¥—ñ–ª–∏–≤—Å—è!</b>

–ú–∏ –ø—Ä–æ—á–∏—Ç–∞–ª–∏ —Ç–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. 

–î—è–∫—É—î–º–æ –∑–∞ –¥–æ–≤—ñ—Ä—É! –î—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º–∏ –¥—É–º–∫–∞–º–∏ —ñ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–Ω—è–º–∏ - —Ü–µ –¥—É–∂–µ –≤–∞–∂–ª–∏–≤–æ.

–Ø–∫—â–æ —Å–∏—Ç—É–∞—Ü—ñ—è –∑–º—ñ–Ω–∏—Ç—å—Å—è —ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –±—É–¥–µ –¥–æ–ø–æ–º–æ–≥–∞ - –∑–∞–≤–∂–¥–∏ –∑–≤–µ—Ä—Ç–∞–π—Å—è!
"""
        
        keyboard = [[InlineKeyboardButton("üîô –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", callback_data="back_to_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            confirmation_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )
    async def cant_write_now(self, query, context):
        """–û–±—Ä–æ–±–∫–∞ "–ù–µ –º–æ–∂—É –ø–∏—Å–∞—Ç–∏ –∑–∞—Ä–∞–∑" """
        
        text = """
    ‚úÖ <b>–ó—Ä–æ–∑—É–º—ñ–ª–æ!</b>

    üö® –î–æ—Ä–æ—Å–ª—ñ –≤–∂–µ –∑–Ω–∞—é—Ç—å, —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞.
    –í–æ–Ω–∏ –∑–∞—Ä–∞–∑ —à—É–∫–∞—é—Ç—å —Å–ø–æ—Å—ñ–± —Ç–µ–±–µ –∑–Ω–∞–π—Ç–∏ —ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏.

    üõ°Ô∏è <b>–©–æ —Ä–æ–±–∏—Ç–∏ –∑–∞—Ä–∞–∑:</b>
    - –°–ø—Ä–æ–±—É–π –∑–Ω–∞–π—Ç–∏ –±–µ–∑–ø–µ—á–Ω–µ –º—ñ—Å—Ü–µ
    - –ë—É–¥—å –ø–æ—Ä—É—á –∑ –¥–æ—Ä–æ—Å–ª–∏–º–∏, —è–∫–∏–º –¥–æ–≤—ñ—Ä—è—î—à
    - –Ø–∫—â–æ –∑–º–æ–∂–µ—à –ø—ñ–∑–Ω—ñ—à–µ - –Ω–∞–ø–∏—à–∏ –±–æ—Ç—É —â–µ —Ä–∞–∑

    üíö –¢—Ä–∏–º–∞–π—Å—è! –î–æ–ø–æ–º–æ–≥–∞ –≤–∂–µ –π–¥–µ!
    """

        keyboard = [
            [InlineKeyboardButton("üìû –°–ø—Ä–æ–±—É—é –∑–Ω–∞–π—Ç–∏ –¥–æ—Ä–æ—Å–ª–æ–≥–æ", callback_data="back_to_menu")],
            [InlineKeyboardButton("üí¨ –í—Å–µ –∂ —Ç–∞–∫–∏ –Ω–∞–ø–∏—à—É", callback_data="urgent_help")]
        ]

    async def back_to_menu(self, query):
        """–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        await self.start_menu(query)

    async def start_menu(self, query):
        """–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é (–¥–ª—è callback query)"""
        welcome_text = """
üèïÔ∏è <b>–ë–µ–∑–ø–µ—á–Ω–∏–π —Ç–∞–±—ñ—Ä</b>

üõ°Ô∏è –û–±–∏—Ä–∞–π, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å:
"""
        
        keyboard = [
            [InlineKeyboardButton("üìö –©–æ —Ç–∞–∫–µ –±—É–ª—ñ–Ω–≥?", callback_data="what_is_bullying")],
            [InlineKeyboardButton("üõ°Ô∏è –©–æ —Ä–æ–±–∏—Ç–∏ —è–∫—â–æ —Ü—å–∫—É—é—Ç—å?", callback_data="what_to_do")],
            [InlineKeyboardButton("üëÄ –Ø–∫—â–æ —Ç–∏ —Å–≤—ñ–¥–æ–∫", callback_data="witness")],
            [InlineKeyboardButton("üÜò SOS - –î–æ–ø–æ–º–æ–≥–∞ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data="sos_help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            welcome_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.HTML
        )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
        user_id = update.effective_user.id
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user_id in self.user_states:
            if self.user_states[user_id] == "waiting_for_urgent_details":
                await self.handle_urgent_details(update, context)
            elif self.user_states[user_id] == "waiting_for_help_report":
                await self.handle_help_report(update, context)
            elif self.user_states[user_id] == "waiting_for_sharing":
                await self.handle_sharing(update, context)
        else:
            # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–∏—à–µ –±–µ–∑ –∫–æ–º–∞–Ω–¥–∏
            await update.message.reply_text(
                "–ü—Ä–∏–≤—ñ—Ç! –ù–∞—Ç–∏—Å–Ω–∏ /start —â–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º ü§ñ"
            )

    async def get_chat_info(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–¢–∏–º—á–∞—Å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Chat ID"""
        chat_id = update.effective_chat.id
        chat_type = update.effective_chat.type
        chat_title = getattr(update.effective_chat, 'title', '–ü—Ä–∏–≤–∞—Ç–Ω–∏–π —á–∞—Ç')
        
        await update.message.reply_text(
            f"üìã <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —á–∞—Ç:</b>\n\n"
            f"üÜî Chat ID: <code>{chat_id}</code>\n"
            f"üìÅ –¢–∏–ø: {chat_type}\n"
            f"üìù –ù–∞–∑–≤–∞: {chat_title}\n\n"
            f"üí° –°–∫–æ–ø—ñ—é–π—Ç–µ Chat ID –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω-—á–∞—Ç—É",
            parse_mode=ParseMode.HTML
        )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤
    if not BOT_TOKEN:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ BOT_TOKEN –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å .env —Ñ–∞–π–ª")
        return
    
    if not ADMIN_CHAT_ID:
        print("‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: ADMIN_CHAT_ID –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ. –ê–Ω–æ–Ω—ñ–º–Ω—ñ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º—É—Ç—å.")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = CampSafetyBot()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", bot.start))
    application.add_handler(CommandHandler("chatinfo", bot.get_chat_info))
    application.add_handler(CallbackQueryHandler(bot.button_handler))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, bot.handle_message))
    application.add_handler(MessageHandler(filters.PHOTO, bot.handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç '–ë–µ–∑–ø–µ—á–Ω–∏–π —Ç–∞–±—ñ—Ä' –∑–∞–ø—É—â–µ–Ω–æ!")
    print("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–∫–∏")
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()